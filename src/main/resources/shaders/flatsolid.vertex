#version 330

// per-vertex attributes
in vec4 v_position;
in vec4 v_color;
in vec3 v_normal;
in float v_lightLevel; 
      
// uniforms
uniform mat4 u_modelView;
uniform mat4 u_modelViewProjection;
uniform mat3 u_normalMatrix;

// shader output
smooth out vec4 color;

void main()                   
{   
    vec3 rotatedSurfaceNormal = u_normalMatrix * v_normal;
    
    // transform vertex to eye coordinates
    vec4 eyeVertex = u_modelView * v_position;
    vec3 eyeVertexNormalized = eyeVertex.xyz / eyeVertex.w; 
       
    vec3 lightPos = u_normalMatrix * vec3(500, 500 , 0 );
    
    // normal vector to light source
    vec3 v_lightDir = normalize(lightPos - eyeVertex.xyz);
       
    float diff = max(0.3,dot(rotatedSurfaceNormal,v_lightDir));
    
    color.rgb = diff * v_color.rgb;
    color.a = 1;
    
    gl_Position = u_modelViewProjection * v_position;
}